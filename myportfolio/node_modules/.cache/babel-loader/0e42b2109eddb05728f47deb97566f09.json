{"ast":null,"code":"var _jsxFileName = \"/Users/dilyaratulegenova/Documents/github/MyOwnPortfolio/myportfolio/src/Components/Carousel/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./Carousel.css\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { TiMediaRecordOutline } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst carousel = {\n  marginTop: \"4rem\",\n  paddingBottom: \"2rem\",\n  overflow: \"hidden\",\n  width: \"100vw\",\n  alignItems: \"center\"\n};\nexport const CarouselItem = _ref => {\n  let {\n    children,\n    width\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: width,\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      margin: \"0\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n};\n_c = CarouselItem;\n\nconst Carousel = _ref2 => {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  // let dumArr = new Array(Math.ceil(children.length / 2))\n  const [paused, setPaused] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const updateIndex = newIndex => {\n    if (newIndex < 0) {\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = 0;\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!paused) {\n        updateIndex(activeIndex + 1);\n      }\n    }, 3000);\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n  const handlers = useSwipeable({\n    onSwipedLeft: () => updateIndex(activeIndex + 1),\n    onSwipedRight: () => updateIndex(activeIndex - 1)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...handlers,\n    style: carousel,\n    onMouseEnter: () => setPaused(true),\n    onMouseLeave: () => setPaused(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        transform: `translateX(-${activeIndex * 100}%)`,\n        whiteSpace: \"nowrap\",\n        transition: \"transform 0.3s\"\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: \"200px\",\n          left: \"5%\",\n          bottom: \"200px\",\n          background: \"linear-gradient(315deg, #000000 0%, #7f8c8d 74%)\",\n          width: \"10%\",\n          opacity: \"0.6\"\n        },\n        onClick: () => {\n          return updateIndex(activeIndex - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/_jsxDEV(TiMediaRecordOutline, {\n          className: `${index === activeIndex ? \"active\" : \"\"}`,\n          onClick: () => {\n            updateIndex(index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: \"200px\",\n          right: \"10px\",\n          bottom: \"200px\",\n          background: \"linear-gradient(315deg, #000000 0%, #7f8c8d 74%)\",\n          width: \"10%\",\n          border: \"none\",\n          opacity: \"0.6\"\n        },\n        className: \"arrorButtonLink\",\n        onClick: () => updateIndex(activeIndex + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}; // #endregion\n\n\n_s(Carousel, \"uVn28Uz2dR0MUMmR224Or+FFSpI=\", false, function () {\n  return [useSwipeable];\n});\n\n_c2 = Carousel;\nexport default Carousel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"sources":["/Users/dilyaratulegenova/Documents/github/MyOwnPortfolio/myportfolio/src/Components/Carousel/Carousel.js"],"names":["React","useState","useEffect","useSwipeable","TiMediaRecordOutline","carousel","marginTop","paddingBottom","overflow","width","alignItems","CarouselItem","children","display","justifyContent","height","margin","Carousel","paused","setPaused","activeIndex","setActiveIndex","updateIndex","newIndex","Children","count","interval","setInterval","clearInterval","handlers","onSwipedLeft","onSwipedRight","transform","whiteSpace","transition","map","child","index","cloneElement","position","top","left","bottom","background","opacity","right","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SAASC,oBAAT,QAAqC,gBAArC;;AAMA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,SAAS,EAAE,MADE;AAEbC,EAAAA,aAAa,EAAE,MAFF;AAGbC,EAAAA,QAAQ,EAAE,QAHG;AAIbC,EAAAA,KAAK,EAAE,OAJM;AAKbC,EAAAA,UAAU,EAAE;AALC,CAAjB;AAYA,OAAO,MAAMC,YAAY,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYH,IAAAA;AAAZ,GAAwB;AAEjD,sBAAQ;AAAK,IAAA,KAAK,EAAE;AAChBA,MAAAA,KAAK,EAAEA,KADS;AAEhBI,MAAAA,OAAO,EAAE,aAFO;AAGhBH,MAAAA,UAAU,EAAE,QAHI;AAIhBI,MAAAA,cAAc,EAAE,QAJA;AAKhBC,MAAAA,MAAM,EAAE,MALQ;AAMhBC,MAAAA,MAAM,EAAE;AANQ,KAAZ;AAAA,cAQHJ;AARG;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH,CAbM;KAAMD,Y;;AAgBb,MAAMM,QAAQ,GAAG,SAAkB;AAAA;;AAAA,MAAjB;AAAEL,IAAAA;AAAF,GAAiB;AAG/B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMqB,WAAW,GAAIC,QAAD,IAAc;AAC9B,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AACdA,MAAAA,QAAQ,GAAGvB,KAAK,CAACwB,QAAN,CAAeC,KAAf,CAAqBb,QAArB,IAAiC,CAA5C;AAEH,KAHD,MAGO,IAAIW,QAAQ,IAAIvB,KAAK,CAACwB,QAAN,CAAeC,KAAf,CAAqBb,QAArB,CAAhB,EAAgD;AACnDW,MAAAA,QAAQ,GAAG,CAAX;AACH;;AAEDF,IAAAA,cAAc,CAACE,QAAD,CAAd;AACH,GATD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAI,CAACT,MAAL,EAAa;AACTI,QAAAA,WAAW,CAACF,WAAW,GAAG,CAAf,CAAX;AACH;AACJ,KAJ2B,EAIzB,IAJyB,CAA5B;AAMA,WAAO,MAAM;AACT,UAAIM,QAAJ,EAAc;AACVE,QAAAA,aAAa,CAACF,QAAD,CAAb;AACH;AACJ,KAJD;AAKH,GAZQ,CAAT;AAcA,QAAMG,QAAQ,GAAG1B,YAAY,CAAC;AAC1B2B,IAAAA,YAAY,EAAE,MAAMR,WAAW,CAACF,WAAW,GAAG,CAAf,CADL;AAE1BW,IAAAA,aAAa,EAAE,MAAMT,WAAW,CAACF,WAAW,GAAG,CAAf;AAFN,GAAD,CAA7B;AAKA,sBACI,oBAASS,QAAT;AACI,IAAA,KAAK,EAAExB,QADX;AACqB,IAAA,YAAY,EAAE,MAAMc,SAAS,CAAC,IAAD,CADlD;AAC0D,IAAA,YAAY,EAAE,MAAMA,SAAS,CAAC,KAAD,CADvF;AAAA,4BAEI;AAAK,MAAA,KAAK,EAAE;AACRa,QAAAA,SAAS,EAAG,eAAcZ,WAAW,GAAG,GAAI,IADpC;AAERa,QAAAA,UAAU,EAAE,QAFJ;AAGRC,QAAAA,UAAU,EAAE;AAHJ,OAAZ;AAAA,gBAOQlC,KAAK,CAACwB,QAAN,CAAeW,GAAf,CAAmBvB,QAAnB,EAA6B,CAACwB,KAAD,EAAQC,KAAR,KAAkB;AAC3C,4BAAOrC,KAAK,CAACsC,YAAN,CAAmBF,KAAnB,EAA0B;AAAE3B,UAAAA,KAAK,EAAE;AAAT,SAA1B,CAAP;AACH,OAFD;AAPR;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAE;AACX8B,UAAAA,QAAQ,EAAE,UADC;AAEXC,UAAAA,GAAG,EAAE,OAFM;AAGXC,UAAAA,IAAI,EAAE,IAHK;AAIXC,UAAAA,MAAM,EAAE,OAJG;AAKXC,UAAAA,UAAU,EAAE,kDALD;AAMXlC,UAAAA,KAAK,EAAE,KANI;AAOXmC,UAAAA,OAAO,EAAE;AAPE,SAAf;AAQG,QAAA,OAAO,EAAE,MAAM;AACd,iBAAOtB,WAAW,CAACF,WAAW,GAAG,CAAf,CAAlB;AACH,SAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAeQpB,KAAK,CAACwB,QAAN,CAAeW,GAAf,CAAmBvB,QAAnB,EAA6B,CAACwB,KAAD,EAAQC,KAAR,KAAkB;AAC3C,4BAEI,QAAC,oBAAD;AAAsB,UAAA,SAAS,EAAG,GAAEA,KAAK,KAAKjB,WAAV,GAAwB,QAAxB,GAAmC,EAAG,EAA1E;AACI,UAAA,OAAO,EAAE,MAAM;AACXE,YAAAA,WAAW,CAACe,KAAD,CAAX;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAOH,OARD,CAfR,eAyBI;AAAQ,QAAA,KAAK,EAAE;AACXE,UAAAA,QAAQ,EAAE,UADC;AAEXC,UAAAA,GAAG,EAAE,OAFM;AAGXK,UAAAA,KAAK,EAAE,MAHI;AAIXH,UAAAA,MAAM,EAAE,OAJG;AAKXC,UAAAA,UAAU,EAAE,kDALD;AAMXlC,UAAAA,KAAK,EAAE,KANI;AAOXqC,UAAAA,MAAM,EAAE,MAPG;AAQXF,UAAAA,OAAO,EAAE;AARE,SAAf;AASG,QAAA,SAAS,EAAC,iBATb;AAS+B,QAAA,OAAO,EAAE,MAAMtB,WAAW,CAACF,WAAW,GAAG,CAAf,CATzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH,CA5FD,C,CA+FA;;;GA/FMH,Q;UAgCed,Y;;;MAhCfc,Q;AAiGN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Carousel.css\";\nimport { useSwipeable } from \"react-swipeable\";\n\nimport { TiMediaRecordOutline } from \"react-icons/ti\";\n\n\n\n\n\nconst carousel = {\n    marginTop: \"4rem\",\n    paddingBottom: \"2rem\",\n    overflow: \"hidden\",\n    width: \"100vw\",\n    alignItems: \"center\"\n}\n\n\n\n\n\nexport const CarouselItem = ({ children, width }) => {\n\n    return (<div style={{\n        width: width,\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        margin: \"0\",\n    }}>\n        {children}\n    </div>\n    );\n}\n\n\nconst Carousel = ({ children }) => {\n\n\n    // let dumArr = new Array(Math.ceil(children.length / 2))\n    const [paused, setPaused] = useState(false);\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const updateIndex = (newIndex) => {\n        if (newIndex < 0) {\n            newIndex = React.Children.count(children) - 1;\n\n        } else if (newIndex >= React.Children.count(children)) {\n            newIndex = 0;\n        }\n\n        setActiveIndex(newIndex);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (!paused) {\n                updateIndex(activeIndex + 1);\n            }\n        }, 3000);\n\n        return () => {\n            if (interval) {\n                clearInterval(interval);\n            }\n        };\n    })\n\n    const handlers = useSwipeable({\n        onSwipedLeft: () => updateIndex(activeIndex + 1),\n        onSwipedRight: () => updateIndex(activeIndex - 1)\n    })\n\n    return (\n        <div {...handlers}\n            style={carousel} onMouseEnter={() => setPaused(true)} onMouseLeave={() => setPaused(false)}>\n            <div style={{\n                transform: `translateX(-${activeIndex * 100}%)`,\n                whiteSpace: \"nowrap\",\n                transition: \"transform 0.3s\",\n\n            }}>\n                {\n                    React.Children.map(children, (child, index) => {\n                        return React.cloneElement(child, { width: \"100%\" });\n                    })}\n            </div>\n            <div className=\"indicators\">\n                <button style={{\n                    position: \"absolute\",\n                    top: \"200px\",\n                    left: \"5%\",\n                    bottom: \"200px\",\n                    background: \"linear-gradient(315deg, #000000 0%, #7f8c8d 74%)\",\n                    width: \"10%\",\n                    opacity: \"0.6\"\n                }} onClick={() => {\n                    return updateIndex(activeIndex - 1)\n                }}>\n                    Prev\n            </button>\n                {\n                    React.Children.map(children, (child, index) => {\n                        return (\n\n                            <TiMediaRecordOutline className={`${index === activeIndex ? \"active\" : \"\"}`}\n                                onClick={() => {\n                                    updateIndex(index)\n                                }}></TiMediaRecordOutline>\n                        )\n                    })\n                }\n                <button style={{\n                    position: \"absolute\",\n                    top: \"200px\",\n                    right: \"10px\",\n                    bottom: \"200px\",\n                    background: \"linear-gradient(315deg, #000000 0%, #7f8c8d 74%)\",\n                    width: \"10%\",\n                    border: \"none\",\n                    opacity: \"0.6\"\n                }} className=\"arrorButtonLink\" onClick={() => updateIndex(activeIndex + 1)}>\n                    Next\n            </button>\n\n            </div>\n        </div>\n    );\n}\n\n\n// #endregion\n\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}